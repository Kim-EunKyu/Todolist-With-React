{"version":3,"sources":["components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","React","memo","TodoList","todos","map","TodoTemplate","children","createBulkTodos","array","i","push","App","setTodos","nextId","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAqCeA,G,MAjCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAC5BC,EAD4B,KACrBC,EADqB,KAG7BC,EAAWC,uBAAY,SAACC,GAC5BH,EAASG,EAAEC,OAAOL,SACjB,IAEGM,EAAWH,uBACf,SAACC,GACe,KAAVJ,GAIJF,EAASE,GACTC,EAAS,IACTG,EAAEG,kBALAH,EAAEG,mBAON,CAACT,EAAUE,IAEb,OACE,uBAAMQ,UAAU,aAAaF,SAAUA,EAAvC,UACE,uBACEG,YAAY,qDACZT,MAAOA,EACPE,SAAUA,IAEZ,wBAAQQ,KAAK,SAAb,SACE,cAAC,IAAD,W,gBCtBFC,G,MAAe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAClB,OACE,sBAAKT,UAAU,eAAf,UACE,sBAAKA,UAAWU,IAAG,WAAY,CAAED,YAAYE,QAAS,kBAAML,EAASC,IAArE,UACGE,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC5B,qBAAKT,UAAU,OAAf,SAAuBQ,OAEzB,qBAAKR,UAAU,SAASW,QAAS,kBAAMN,EAASE,IAAhD,SACE,cAAC,IAAD,WAMOK,MAAMC,KAAKV,GCpBpBW,G,MAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOV,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,qBAAKN,UAAU,WAAf,SACGe,EAAMC,KAAI,SAACZ,GAAD,OACT,cAAC,EAAD,CACEA,KAAMA,EAENC,SAAUA,EACVC,SAAUA,GAFLF,EAAKG,WASLK,MAAMC,KAAKC,GCPXG,G,MATM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,sBAAKlB,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,uCACA,qBAAKA,UAAU,UAAf,SAA0BkB,SCFhC,SAASC,IAGP,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,GAAK,KAAMA,IACzBD,EAAME,KAAK,CACTf,GAAIc,EACJb,KAAK,iBAAD,OAASa,GACbZ,SAAS,IAGb,OAAOW,EAGT,IAmCeG,EAnCH,WAAO,IAAD,EACUhC,mBAAS4B,GADnB,mBACTJ,EADS,KACFS,EADE,KAGVC,EAASC,iBAAO,MAEhBpC,EAAWK,uBAAY,SAACa,GAC5B,IAAMJ,EAAO,CACXG,GAAIkB,EAAOE,QACXnB,OACAC,SAAS,GAEXe,GAAS,SAACT,GAAD,OAAWA,EAAMa,OAAOxB,MACjCqB,EAAOE,SAAW,IACjB,IAEGtB,EAAWV,uBAAY,SAACY,GAC5BiB,GAAS,SAACT,GAAD,OAAWA,EAAMc,QAAO,SAACzB,GAAD,OAAUA,EAAKG,KAAOA,UACtD,IAEGD,EAAWX,uBAAY,SAACY,GAC5BiB,GAAS,SAACT,GAAD,OACPA,EAAMC,KAAI,SAACZ,GAAD,OACRA,EAAKG,KAAOA,EAAZ,2BAAsBH,GAAtB,IAA4BK,SAAUL,EAAKK,UAAYL,UAG1D,IAEH,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAYd,SAAUA,IACtB,cAAC,EAAD,CAAUyB,MAAOA,EAAOV,SAAUA,EAAUC,SAAUA,QCpC7CwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50ffdb96.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport \"./TodoInsert.scss\";\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      if (value === \"\") {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      onInsert(value);\r\n      setValue(\"\");\r\n      e.preventDefault();\r\n    },\r\n    [onInsert, value]\r\n  );\r\n  return (\r\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n      <input\r\n        placeholder=\"할 일을 입력하세요\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <button type=\"submit\">\r\n        <MdAdd />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import React from \"react\";\r\nimport {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline,\r\n} from \"react-icons/md\";\r\nimport cn from \"classnames\";\r\nimport \"./TodoListItem.scss\";\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\r\n  const { id, text, checked } = todo;\r\n  return (\r\n    <div className=\"TodoListItem\">\r\n      <div className={cn(\"checkbox\", { checked })} onClick={() => onToggle(id)}>\r\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n        <div className=\"text\">{text}</div>\r\n      </div>\r\n      <div className=\"remove\" onClick={() => onRemove(id)}>\r\n        <MdRemoveCircleOutline />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from \"react\";\r\nimport TodoListItem from \"./TodoListItem\";\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  return (\r\n    <div className=\"TodoList\">\r\n      {todos.map((todo) => (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={todo.id}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { Children } from \"react\";\r\nimport \"./TodoTemplate.scss\";\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"TodoTemplate\">\r\n      <div className=\"app-title\">일정 관리</div>\r\n      <div className=\"content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React, { useCallback, useRef, useState } from \"react\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\nimport TodoTemplate from \"./components/TodoTemplate\";\n\nfunction createBulkTodos() {\n  //test sample\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false,\n    });\n  }\n  return array;\n}\n\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos);\n\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos((todos) => todos.concat(todo));\n    nextId.current += 1;\n  }, []);\n\n  const onRemove = useCallback((id) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  }, []);\n\n  const onToggle = useCallback((id) => {\n    setTodos((todos) =>\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  }, []);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}